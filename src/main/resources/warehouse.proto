syntax = "proto3";

package msg;

option java_package = "com.dst.msg";
option java_outer_classname = "WarehouseMessage";

import "google/protobuf/any.proto";

message Credentials {
  string login = 1;
  string password = 2;
  repeated google.protobuf.Any details = 3;
}

message LogInResponse {
  repeated google.protobuf.Any details = 1;
  string login = 2;         // Возврат логина
  enum Status {             // Статус авторизации
    OK = 0;                 // Авторизация прошла успешно
    WRONG_LOGIN = 1;        // Логина нет в базе
    WRONG_PASS = 2;         // Пароль неверный
    ACCESS_DENIED = 3;      // Доступ запрещен по другим причинам
  }
  Status loginStatus = 3;
  enum Role {
    DISPATCHER = 0;         // Диспетчер
    DRIVER = 1;             // Водитель
  }
  Role userRole = 4;        // Роль пользователя
  string userInfo = 5;      // Информация о пользователе: для водителя - грузоподъемность, например "1750"
}

//message Task {
//  int32 id = 1; // Номер задачи
//  string cargo_name =2; // Объект перевозки
//  string comment = 3; // Комментарий к задаче
//  string source_point = 4; // Пункт откуда
//  string dest_point = 5; // Пункт куда
//  string task_init_time = 6; // Время постановки задачи
//  string task_start_time = 7; // Время начала выполнения
//  string task_finish_time = 8; // Время завершения задачи
//  string customer = 9; // Постановщик - создать класс
//  string executor = 10; // Исполнтель - создать класс
//  string status = 11; // Статус - сделать enum
//  repeated google.protobuf.Any details = 12;
//}
//
//message Loader {
//  int32 id = 1; // Номер погрузчика
//  string lat = 2; // Широта
//  string lon = 3; // Долгота
//  int32 task_id = 4; // Номер текущей задачи - сделать массивом
//  repeated google.protobuf.Any details = 5;
//}

// Новая задача от диспетчера
message NewTask {
  repeated google.protobuf.Any details = 1;
  enum Weight { // Грузоподъемность
    KG_1500 = 0;
    KG_1750 = 1;
    KG_2000 = 2;
    KG_3000 = 3;
    KG_5000 = 4;
  }
  Weight weight = 2;
  enum Priority { // Приоритет
    LOW = 0;
    MEDIUM = 1;
    HIGH = 2;
  }
  Priority priority = 3;
}
// Действие с задачей
message Action {
  repeated google.protobuf.Any details = 1;
  int32 id = 2;
  enum Act {
    CANCEL = 0;
    FINISH = 1;
    START = 2;
  }
  Act act = 3;
}
// Список задач
message ListofTaskDisp {
  repeated google.protobuf.Any details = 1;
  repeated Task2 task = 2;
}
// Задача для отображения в списке
message Task2 {
  repeated google.protobuf.Any details = 1;
  int32 id = 2; // идентификатор
  NewTask.Weight weight = 3;  // весовая категория
  NewTask.Priority priority = 4;  // приоритет
  string timeCreate = 5;  // время создания задачи, мс
  enum Status {
    WAIT = 0;         // задача в очереди
    STARTED = 1;      // задача выполняется
    CANCELLED = 2;    // задача отменена
    FINISHED = 3;     // задача завершена
  }
  Status status = 6;
  string assignee = 7; // постановщик задачи
  string reporter = 8; // исполнитель задачи
  string name = 9;     // название задачи, пока что совпадает с именем того, кто поставил
}

message UserStatus {
  repeated google.protobuf.Any details = 1;
  enum Status {
    READY = 0;       // водитель готов выполнять задачи
    BROKEN = 1;      // техническая неисправность у водителя
  }
  Status status = 2;
}